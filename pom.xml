<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.whz.dubbo</groupId>
    <artifactId>dubbo3-invoke-plugin</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <java.version>8</java.version>
        <spring-boot.version>2.0.3.RELEASE</spring-boot.version>
    </properties>

    <dependencies>

        <!-- 不再需要去继承 springBoot module了 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-dependencies</artifactId>
            <version>${spring-boot.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo</artifactId>
            <version>3.1.8.4</version>
        </dependency>

        <!-- mysql-connector -->
        <!--<dependency>-->
        <!--    <groupId>mysql</groupId>-->
        <!--    <artifactId>mysql-connector-java</artifactId>-->
        <!--    <version>5.1.47</version>-->
        <!--</dependency>-->
        <!-- mybatis -->
        <!--<dependency>-->
        <!--    <groupId>org.mybatis.spring.boot</groupId>-->
        <!--    <artifactId>mybatis-spring-boot-starter</artifactId>-->
        <!--    <version>1.1.1</version>-->
        <!--</dependency>-->


        <!-- 三方工具 -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-core</artifactId>
            <version>5.7.10</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.8.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <artifactId>fastjson</artifactId>
            <groupId>com.alibaba</groupId>
            <version>1.2.83</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>

        <!-- log -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.16</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>


        <!-- 测试 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- spring-boot-maven-plugin -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>1.4.0.RELEASE</version>
                    <configuration>
                        <executable>true</executable>
                        <requiresUnpack>
                            <dependency>
                                <groupId>com.netflix.eureka</groupId>
                                <artifactId>eureka-core</artifactId>
                            </dependency>
                            <dependency>
                                <groupId>com.netflix.eureka</groupId>
                                <artifactId>eureka-client</artifactId>
                            </dependency>
                        </requiresUnpack>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- maven-compiler-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <!-- maven-surefire-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0</version>
                    <configuration>
                        <!-- 打包时，可以跳过单元测试 -->
                        <skipTests>true</skipTests>
                    </configuration>
                </plugin>

                <!-- 源码打包插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                    <configuration>
                        <!-- attach的值为true，表示打成的jar文件会自动安装（发布或部署）到本地的Maven仓库中 -->
                        <attach>true</attach>
                    </configuration>
                    <executions>
                        <execution>
                            <!-- 任务名称 -->
                            <id>attach-sources</id>
                            <!-- 表示在什么阶段打包源文件，这里配置的再mvn package时打包源代码 -->
                            <phase>package</phase>
                            <goals>
                                <!-- 将jar-no-fork绑定在package流程节点上 -->
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- 资源⽂件打包插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                    <configuration>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>perm</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <!-- deploy artifact到远程仓库 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.7</version>
                    <configuration>
                        <skip>false</skip>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>

    </build>

    <!-- build profiles -->
    <profiles>
        <profile>
            <id>prod</id>
            <properties>
                <repo-id>prod</repo-id>
                <release-repo-name>releases</release-repo-name>
                <release-repo-url>http://mvn.cai-inc.com/content/repositories/releases/</release-repo-url>
                <snapshot-repo-name>snapshots</snapshot-repo-name>
                <snapshot-repo-url>http://mvn.cai-inc.com/content/repositories/snapshots/</snapshot-repo-url>
                <maven.test.skip>true</maven.test.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>2.4</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dev</id>
            <activation>
                <!-- 设置此节点配置作为默认配置 -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <repo-id>dev</repo-id>
                <release-repo-name>releases</release-repo-name>
                <release-repo-url>http://dev-mvn.cai-inc.com/content/repositories/releases/</release-repo-url>
                <snapshot-repo-name>snapshots</snapshot-repo-name>
                <snapshot-repo-url>http://dev-mvn.cai-inc.com/content/repositories/snapshots/</snapshot-repo-url>
                <maven.test.skip>true</maven.test.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>2.4</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- maven plugin远程仓库配置 -->
    <pluginRepositories>
        <pluginRepository>
            <id>aliyun-plugin</id>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring</id>
            <url>https://repo.spring.io/release/</url>
        </pluginRepository>
        <pluginRepository>
            <id>releases</id>
            <url>${release-repo-url}</url>
        </pluginRepository>
        <pluginRepository>
            <id>snapshots</id>
            <url>${snapshot-repo-url}</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- deploy包到远程仓库 -->
    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Nexus Release Repository</name>
            <url>${release-repo-url}</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>${snapshot-repo-url}</url>
        </snapshotRepository>
    </distributionManagement>

</project>
